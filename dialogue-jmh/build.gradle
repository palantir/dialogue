versionsLock {
    testProject()
}

dependencies {
    implementation project(':dialogue-core')
    implementation project(':dialogue-test-common')
    implementation 'com.google.guava:guava'
    implementation 'org.openjdk.jmh:jmh-core'
    implementation 'com.palantir.safethreadlocalrandom:safe-thread-local-random'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl'
    runtimeOnly 'org.apache.logging.log4j:log4j-core'

    annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess'
    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'
}


def benchmarkFile = "${buildDir}/benchmark_results.out"

task jmh(type: JavaExec) {
    main = 'org.openjdk.jmh.Main'
    classpath = sourceSets.main.runtimeClasspath
    maxHeapSize = '1024m'

    // e.g. ./gradlew jmv -PjmhOptions='-rf json'
    if (project.hasProperty('jmhOptions')) {
        args(project.jmhOptions.split(' '))
    }
    doFirst {
        standardOutput new org.apache.tools.ant.util.TeeOutputStream(
                new FileOutputStream(benchmarkFile), System.out)
    }
}

tasks.withType(JavaCompile) {
    options.errorprone.errorproneArgs += [ '-Xep:HidingField:OFF',  '-Xep:Slf4jLogsafeArgs:OFF', '-Xep:NullAway:OFF' ]
}
