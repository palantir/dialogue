/*
 * (c) Copyright 2018 Palantir Technologies Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://dl.bintray.com/palantir/releases/'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath 'com.palantir.gradle.revapi:gradle-revapi:1.4.4'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:1.1.0'
        classpath 'com.netflix.nebula:gradle-info-plugin:9.2.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:17.3.2'
        classpath 'com.palantir.baseline:gradle-baseline-java:3.66.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.3'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.3.0'
        classpath 'com.palantir.metricschema:gradle-metric-schema:0.5.16'
        classpath 'com.palantir.gradle.conjure:gradle-conjure:5.1.1'
    }
}

plugins {
    id 'com.palantir.consistent-versions' version '1.28.0'
}

apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.git-version'

version System.env.CIRCLE_TAG ?: gitVersion()

allprojects {
    apply plugin: 'com.palantir.java-format'

    group 'com.palantir.dialogue'
    version rootProject.version

    repositories {
        jcenter()
        maven {
            url 'https://dl.bintray.com/palantir/releases/'
        }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.inferred.processors'

    sourceCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-Werror']
    }

    plugins.withId('com.palantir.baseline-error-prone', {
        dependencies {
            errorprone 'com.uber.nullaway:nullaway'
        }

        tasks.withType(JavaCompile).configureEach {
            if (name.toLowerCase().contains("test")) {
                options.errorprone.disable('NullAway')
            } else {
                options.errorprone.option('NullAway:AnnotatedPackages', 'com.palantir')
            }
        }
    })

    tasks.check.dependsOn checkImplicitDependencies
    tasks.checkImplicitDependenciesTest.enabled = false // doesn't impact users
}
