options:
  javaPackage: com.palantir.dialogue.core
  javaVisibility: packagePrivate
namespaces:
  dialogue.client:
    docs: Dialogue client response metrics.
    metrics:
      response:
        type: timer
        tags: [channel-name, service-name]
        docs: Request time, note that this does not include time spent reading the response body.
      request.active:
        type: counter
        tags: [channel-name, service-name, stage]
        docs:
          Number of requests that are actively running. The `stage` may refer to `running` requests actively
          executing over the wire or `processing` which may be awaiting a client or backing off for a retry.
          Note that running requests are also counted as processing.
      requests.queued:
        type: counter
        tags: [channel-name]
        docs: Number of queued requests waiting to execute.
      deprecations:
        type: meter
        tags: [service-name]
        docs: Rate of deprecated endpoints being invoked.
      limited:
        type: meter
        tags: [reason]
        docs: Rate that client-side requests are deferred to be retried later.

  dialogue.concurrencylimiter:
    docs: Instrumentation for the ConcurrencyLimitedChannel
    metrics:
      utilization:
        type: gauge
        tags: [hostIndex]
        docs: The proportion of the available concurrency which is currently being used, i.e. if there are 20 permits and only one inflight call, this will be 0.05.
      max:
        type: gauge
        tags: [hostIndex]
        docs: The maximum number of concurrent requests which are currently permitted. Additively increases with successes and multiplicatively decreases with failures.

  dialogue.pinuntilerror:
    docs: Instrumentation for the PIN_UNTIL_ERROR node selection strategy.
    metrics:
      success:
        type: meter
        tags: [hostIndex]
        docs: Meter of the requests that were successfully, tagged by the index of the inner channel. (Note if there are >10 nodes this metric will not be recorded).
      nextNode:
        type: meter
        tags: [reason]
        docs: Marked every time we switch to a new node, includes the reason why we switched (limited, responseCode, throwable).
        # TODO(dfox): can we plumb the serviceName in here e.g. GatekeeperService?
      reshuffle:
        type: meter
        docs: Marked every time we reshuffle all the nodes.
